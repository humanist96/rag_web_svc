name: Deploy Backend to Render

on:
  push:
    branches:
      - main
      - master
    paths:
      - 'enhanced_rag_chatbot.py'
      - 'requirements.txt'
      - 'advanced_ai_prompts.py'
      - 'session_storage.py'
      - 'context_relevance_checker.py'
      - '.github/workflows/deploy-backend.yml'
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Deploy to Render
      env:
        RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
        RENDER_SERVICE_ID: ${{ secrets.RENDER_SERVICE_ID }}
      run: |
        # Trigger deploy on Render
        curl -X POST \
          -H "Authorization: Bearer $RENDER_API_KEY" \
          -H "Content-Type: application/json" \
          "https://api.render.com/v1/services/$RENDER_SERVICE_ID/deploys"
    
    - name: Wait for deployment
      run: sleep 30
    
    - name: Check deployment status
      env:
        RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
        RENDER_SERVICE_ID: ${{ secrets.RENDER_SERVICE_ID }}
      run: |
        # Get latest deploy status
        DEPLOY_STATUS=$(curl -s \
          -H "Authorization: Bearer $RENDER_API_KEY" \
          "https://api.render.com/v1/services/$RENDER_SERVICE_ID/deploys?limit=1" | \
          jq -r '.[0].status')
        
        echo "Deployment status: $DEPLOY_STATUS"
        
        if [ "$DEPLOY_STATUS" = "live" ]; then
          echo "✅ Deployment successful!"
        else
          echo "⚠️ Deployment status: $DEPLOY_STATUS"
        fi
    
    - name: Test backend endpoint
      run: |
        # Wait a bit more for the service to be fully ready
        sleep 10
        
        # Test the health endpoint
        RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" https://rag-web-svc.onrender.com/health)
        
        if [ "$RESPONSE" = "200" ]; then
          echo "✅ Backend is healthy!"
        else
          echo "❌ Backend health check failed with status: $RESPONSE"
          exit 1
        fi